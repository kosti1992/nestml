{#
  In general case creates an

  @param variable VariableSymbol Variable for which the initialization should be done
  @param printer The particular pretty printer which prints expressions. Is used to handel differences where the
                 variable is declared (inside a struct or in another method)
#}
{%- if variable.has_declaring_expression() and not variable.is_shape() %}
  {%- if variable.has_vector_parameter() %}
  {{printer.printOrigin(variable)}}{{names.name(variable)}}.resize(P_.{{variable.get_vector_parameter()}}, {{printer.printExpression(variable.get_declaring_expression())}}); // as {{variable.get_type_symbol().print_symbol()}}
  {%- else %}
  {{printer.printOrigin(variable)}}{{names.name(variable)}} = {{printer.printExpression(variable.get_declaring_expression())}}; // as {{variable.get_type_symbol().print_symbol()}}
  {%- endif %}
{%- else %}
  {%- if variable.has_vector_parameter() %}
  {{printer.printOrigin(variable)}}{{names.name(variable)}}.resize(0); // as {{variable.get_type_symbol().print_symbol()}}
  {%- else %}
  {{printer.printOrigin(variable)}}{{names.name(variable)}} = 0; // as {{variable.get_type_symbol().print_symbol()}}
  {%- endif -%}
{%- endif -%}